# This workflow deploys a Node.js web application to GitHub Pages.
# It assumes your build output is in a directory named 'build' or 'dist'.

name: Deploy Node.js App to GitHub Pages

on:
  push:
    branches:
      - main # Trigger the workflow on pushes to the 'main' branch (or 'master')
  workflow_dispatch: # Allows you to manually trigger the workflow from the GitHub Actions tab

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Action to check out your repository code

      - name: Set up Node.js
        uses: actions/setup-node@v4 # Action to set up Node.js environment
        with:
          node-version: '20' # Specify the Node.js version you want to use (e.g., 16, 18, 20)
          cache: 'npm' # Cache npm dependencies to speed up builds

      - name: Install dependencies
        run: npm install # Installs dependencies from package-lock.json for consistent builds

      - name: Build Node.js application
        run: npm run build # Runs the 'build' script defined in your package.json
        env:
          # If your build process requires environment variables (e.g., for React apps),
          # define them here. For example:
          CI: true # Often used by create-react-app to treat warnings as errors
          # PUBLIC_URL: /<YOUR_REPOSITORY_NAME>/ # Important for routing if deployed to a subpath

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4 # Action to deploy to GitHub Pages
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }} # GitHub token for authentication
          publish_dir: ./dist # The directory containing your built static files
          #
          # If you want to deploy to a specific branch (e.g., 'docs' instead of 'gh-pages'):
          # publish_branch: gh-pages # Default branch for GitHub Pages
          #
          # If you want to keep the history of the gh-pages branch:
          # keep_files: true
